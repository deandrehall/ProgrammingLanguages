Observe the following Haskell REPL session:

Prelude> let multiply op1 op2 = op1 * op2
multiply :: Num a => a -> a -> a
Prelude>

Explain the details the REPL reported between the two Prelude> lines.


This is an example of currying in Haskell. The function multiply which
takes 2 arguemnts as its input is transformed into a function that only recieves a single
arugment and returns a function that takes one parameter which returns a
parameter.
