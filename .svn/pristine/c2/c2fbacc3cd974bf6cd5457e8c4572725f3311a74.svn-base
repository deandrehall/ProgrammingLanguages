[Venkat 09/15/16 08:52 AM MDT]
synopsis: a few things to fix and wrap it up 

details:
C++:
Please see suggestion in code.

Python: good

Go:
fibonacci_immutable: This requires rework. It has too much code.
This version should not be much different from what we did in Python.
Take a look at the Python code and try to replicate that here in Go.
Avoid mutation in this version of the function.


assign1.txt:

Please write in short paragraphs (instead of bullets).
Please spell check.
This will help to bring out more details and also look for other learnings that we may be missing to discuss. This is especially true in (3) though applies to 1 and 2 also. What you have mentioned in 3 right now may actually go into 2. Then in 3 you can compare the languages.

------------------------------------------------------------------------------
[Venkat 09/14/16 08:20 AM MDT]
synopsis: nice progress 

details:
Python:
Please see suggestions in code.

Go:
We can run without an explicit compile step, see the build file.

Please see some suggestions in code. Please proceed to complete the work.

------------------------------------------------------------------------------
[Venkat 09/13/16 07:12 AM MDT]
synopsis: please fix and move forward. Address previous review 

details:
C++: Please check for the failure for position of 1.

Python:
Please address my previous review notes and remove my notes from code.

Fix and move forward to writing *two* functions in the last language.

------------------------------------------------------------------------------
[Venkat 09/12/16 06:25 AM MDT]
synopsis: reduce code, avoid recursion in iterative code 

details:                                                

Python: See suggestions for change in code.

After fixing this move on to *one* function in a third language.

------------------------------------------------------------------------------
[Venkat 09/11/16 08:59 AM MDT]
synopsis: fix and move forward 

details:
C++: We will get back to the immutable version later.

Python:
Please fix, then move forward to the next *two* functions in Python.

------------------------------------------------------------------------------
[Venkat 09/10/16 05:47 AM MDT]
synopsis: honor immutability in the immutable version 

details:                                             
Take a look at functions like accumulate.
Start with a dummy list of size equal to the given position. Then iterate over it using accumulate to create the series.

If you're stuck on that, you may either continue to explore further or leave this for now and start with the next language (but not both). If you decide to continue to explore, please continue. If you decide to drop this last one for now and move to the next language, then remove the fibonacciImmutable function and move to the next language. You can always come back later (if time permits) after making progress with the other languages.

------------------------------------------------------------------------------
[Venkat 09/09/16 06:16 AM MDT]
synopsis: fix and then move forward 

details:                           
A few changes, please fix the code and after that move to the next function.

------------------------------------------------------------------------------
[Venkat 09/08/16 07:11 AM MDT]
synopsis: fix and then move forward 

details:                           
A few changes, please fix the code and after that move to the next function.

------------------------------------------------------------------------------
[Venkat 09/07/16 06:34 AM MDT]
synopsis: let's use the languages's library 

details:
Why both C++ and cpp directory? I see two directories, C++ and cpp. Which one should I use? Keep one, remove the other.

fibonacciMutable:
The language has a list class in the STL. Let's use that, and return list<int> instead of returning int*.                                     

------------------------------------------------------------------------------
[Venkat 09/06/16 06:41 AM MDT]
synopsis: let's return a sequence and make the function pure 

details:
Place the code and the build file inside a C++ or cpp directory.

Make no sense to do chmod +x of the file within the file! If we can't run it we can't execute that line. If we were able to run it, then that line is of no use. :)

Please remove the read from the last line of the build file.

Please renamed fib.sh to build.sh.

When the build is executed, the output shows warnings. Please fix any warnings.

Generally we do not put a .o for executables. Instead of Fibonacci.o please name it fibonacci.

Code:
Please remove commented out lines from code.

The function should be a pure function, all side-effects like printing should happen in main.

Let's not use meaningless single letter variables. Please use variable names that immediately tell us what they stand for.

k - position.

Return a sequence from the fib function instead of an integer.

Let's rename fib to fibonacciMutable so we know what version we're dealing with.

------------------------------------------------------------------------------
C++: mutable, recursive, ?
Python: almost done
: